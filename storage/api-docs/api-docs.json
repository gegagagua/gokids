{
    "openapi": "3.0.0",
    "info": {
        "title": "MyKids API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "summary": "Register new user",
                "operationId": "8e4e3cb7b46126f4696379d3c7eeb4ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "user"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "summary": "Login user",
                "operationId": "222b2625838e3c57e017987f73598fda",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "garden"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "summary": "Logout user",
                "operationId": "ad65cbbd4e9f201619eae184a5961a98",
                "responses": {
                    "200": {
                        "description": "Logged out"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/change-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Change password for the authenticated user",
                "description": "Change password for the authenticated user (admin or garden). Requires current password, new password, and password confirmation.",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "example": "oldpassword"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 6,
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "minLength": 6,
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Current password is incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Current password is incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/request-password-reset": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Request password reset (send OTP)",
                "description": "Send OTP code to user's email for password reset.",
                "operationId": "requestPasswordReset",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent to email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password with OTP",
                "description": "Reset password using email, OTP code, new password and confirmation.",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 6,
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "minLength": 6,
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired OTP."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cards": {
            "get": {
                "tags": [
                    "Cards"
                ],
                "summary": "Get all cards",
                "description": "Retrieve a paginated list of all child cards with their associated group and person type information. Supports filtering by search (child's or parent's name fields), phone, status, group_id, person_type_id, parent_code.",
                "operationId": "getCards",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in child's and parent's name fields",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "Filter by phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "active",
                                "inactive"
                            ]
                        }
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Filter by group ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "person_type_id",
                        "in": "query",
                        "description": "Filter by person type ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parent_code",
                        "in": "query",
                        "description": "Filter by parent code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (pagination)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "child_first_name": {
                                                        "type": "string",
                                                        "example": "Giorgi"
                                                    },
                                                    "child_last_name": {
                                                        "type": "string",
                                                        "example": "Davitashvili"
                                                    },
                                                    "father_name": {
                                                        "type": "string",
                                                        "example": "Davit"
                                                    },
                                                    "parent_first_name": {
                                                        "type": "string",
                                                        "example": "Nino"
                                                    },
                                                    "parent_last_name": {
                                                        "type": "string",
                                                        "example": "Davitashvili"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+995599123456"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "active",
                                                            "inactive"
                                                        ],
                                                        "example": "active"
                                                    },
                                                    "group_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "person_type_id": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "nullable": true
                                                    },
                                                    "parent_code": {
                                                        "type": "string",
                                                        "example": "ABC123",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "group": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Group A"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "personType": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "ბავშვი"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 50
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cards"
                ],
                "summary": "Create a new card",
                "description": "Create a new child card with the provided information",
                "operationId": "createCard",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "child_first_name",
                                    "child_last_name",
                                    "father_name",
                                    "parent_first_name",
                                    "parent_last_name",
                                    "phone",
                                    "status",
                                    "group_id"
                                ],
                                "properties": {
                                    "child_first_name": {
                                        "description": "Child's first name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Giorgi"
                                    },
                                    "child_last_name": {
                                        "description": "Child's last name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Davitashvili"
                                    },
                                    "father_name": {
                                        "description": "Father's name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Davit"
                                    },
                                    "parent_first_name": {
                                        "description": "Parent's first name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Nino"
                                    },
                                    "parent_last_name": {
                                        "description": "Parent's last name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Davitashvili"
                                    },
                                    "phone": {
                                        "description": "Contact phone number",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+995599123456"
                                    },
                                    "status": {
                                        "description": "Card status",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    },
                                    "group_id": {
                                        "description": "ID of the associated garden group",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "person_type_id": {
                                        "description": "Person type ID from person-types",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "parent_code": {
                                        "description": "Optional parent access code",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "ABC123",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Card created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "child_first_name": {
                                            "type": "string",
                                            "example": "Giorgi"
                                        },
                                        "child_last_name": {
                                            "type": "string",
                                            "example": "Davitashvili"
                                        },
                                        "father_name": {
                                            "type": "string",
                                            "example": "Davit"
                                        },
                                        "parent_first_name": {
                                            "type": "string",
                                            "example": "Nino"
                                        },
                                        "parent_last_name": {
                                            "type": "string",
                                            "example": "Davitashvili"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+995599123456"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "active"
                                        },
                                        "group_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "person_type_id": {
                                            "type": "integer",
                                            "example": 1,
                                            "nullable": true
                                        },
                                        "parent_code": {
                                            "type": "string",
                                            "example": "ABC123",
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "child_first_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "child_last_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "father_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "parent_first_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "parent_last_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "group_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "person_type_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cards/{id}": {
            "get": {
                "tags": [
                    "Cards"
                ],
                "summary": "Get a specific card",
                "description": "Retrieve detailed information about a specific child card",
                "operationId": "getCard",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "child_first_name": {
                                            "type": "string",
                                            "example": "Giorgi"
                                        },
                                        "child_last_name": {
                                            "type": "string",
                                            "example": "Davitashvili"
                                        },
                                        "father_name": {
                                            "type": "string",
                                            "example": "Davit"
                                        },
                                        "parent_first_name": {
                                            "type": "string",
                                            "example": "Nino"
                                        },
                                        "parent_last_name": {
                                            "type": "string",
                                            "example": "Davitashvili"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+995599123456"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "active",
                                                "inactive"
                                            ],
                                            "example": "active"
                                        },
                                        "group_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "parent_code": {
                                            "type": "string",
                                            "example": "ABC123",
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "group": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Group A"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Card not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Card]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cards"
                ],
                "summary": "Update a card",
                "description": "Update an existing child card with new information",
                "operationId": "updateCard",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "child_first_name": {
                                        "description": "Child's first name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Giorgi"
                                    },
                                    "child_last_name": {
                                        "description": "Child's last name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Davitashvili"
                                    },
                                    "father_name": {
                                        "description": "Father's name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Davit"
                                    },
                                    "parent_first_name": {
                                        "description": "Parent's first name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Nino"
                                    },
                                    "parent_last_name": {
                                        "description": "Parent's last name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Davitashvili"
                                    },
                                    "phone": {
                                        "description": "Contact phone number",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+995599654321"
                                    },
                                    "status": {
                                        "description": "Card status",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "inactive"
                                    },
                                    "group_id": {
                                        "description": "ID of the associated garden group",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "parent_code": {
                                        "description": "Optional parent access code",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "XYZ789",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Card updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "child_first_name": {
                                            "type": "string",
                                            "example": "Updated Giorgi"
                                        },
                                        "child_last_name": {
                                            "type": "string",
                                            "example": "Updated Davitashvili"
                                        },
                                        "father_name": {
                                            "type": "string",
                                            "example": "Updated Davit"
                                        },
                                        "parent_first_name": {
                                            "type": "string",
                                            "example": "Updated Nino"
                                        },
                                        "parent_last_name": {
                                            "type": "string",
                                            "example": "Updated Davitashvili"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+995599654321"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "inactive"
                                        },
                                        "group_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "parent_code": {
                                            "type": "string",
                                            "example": "XYZ789",
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Card not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Card]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "child_first_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "child_last_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "father_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "parent_first_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "parent_last_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "group_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cards"
                ],
                "summary": "Delete a card",
                "description": "Permanently delete a child card",
                "operationId": "deleteCard",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Card deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Card not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Card]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cards/{id}/image": {
            "post": {
                "tags": [
                    "Cards"
                ],
                "summary": "Upload or replace card image",
                "description": "Upload a new image for the card. If an image already exists, it will be replaced.",
                "operationId": "uploadCardImage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "image_path": {
                                            "type": "string",
                                            "example": "cards/12345.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Card not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cities": {
            "get": {
                "summary": "Get all cities",
                "operationId": "9aa71499e99f285398e0ccb3e56657e7",
                "responses": {
                    "200": {
                        "description": "List of cities"
                    }
                }
            }
        },
        "/api/devices": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Get all devices",
                "description": "Retrieve a list of all devices. Supports filtering by name, status, garden_id. Pagination supported.",
                "operationId": "getDevices",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by device name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "inactive"
                            ]
                        }
                    },
                    {
                        "name": "garden_id",
                        "in": "query",
                        "description": "Filter by garden ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (pagination)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Device 1"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "active",
                                                            "inactive"
                                                        ],
                                                        "example": "active"
                                                    },
                                                    "garden_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "garden_groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer"
                                                        },
                                                        "example": [
                                                            1,
                                                            2,
                                                            3
                                                        ]
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 50
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Devices"
                ],
                "summary": "Create a new device",
                "description": "Create a new device for a garden. garden_groups is an array of group IDs.",
                "operationId": "createDevice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "status",
                                    "garden_id",
                                    "garden_groups"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Device 1"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    },
                                    "garden_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "garden_groups": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Device created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Device 1"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "active",
                                                "inactive"
                                            ],
                                            "example": "active"
                                        },
                                        "garden_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "garden_groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "example": [
                                                1,
                                                2,
                                                3
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/devices/{id}": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Get a specific device",
                "description": "Retrieve detailed information about a specific device.",
                "operationId": "getDevice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Device ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Device 1"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "active",
                                                "inactive"
                                            ],
                                            "example": "active"
                                        },
                                        "garden_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "garden_groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "example": [
                                                1,
                                                2,
                                                3
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Device]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Devices"
                ],
                "summary": "Update a device",
                "description": "Update an existing device. garden_groups is an array of group IDs.",
                "operationId": "updateDevice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Device ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Device 1"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    },
                                    "garden_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "garden_groups": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Device updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Device 1"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "active",
                                                "inactive"
                                            ],
                                            "example": "active"
                                        },
                                        "garden_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "garden_groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "example": [
                                                1,
                                                2,
                                                3
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Device]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Devices"
                ],
                "summary": "Delete a device",
                "description": "Delete a specific device by ID.",
                "operationId": "deleteDevice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Device ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Device deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Device]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gardens": {
            "get": {
                "tags": [
                    "Gardens"
                ],
                "summary": "Get all gardens",
                "description": "Retrieve a paginated list of all gardens with their associated city and images. Supports filtering by name, address, city_id, tax_id, phone, email.",
                "operationId": "getGardens",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by garden name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Filter by address",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city_id",
                        "in": "query",
                        "description": "Filter by city ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "tax_id",
                        "in": "query",
                        "description": "Filter by tax ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "Filter by phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter by email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (pagination)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Sunshine Garden"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Main Street"
                                                    },
                                                    "tax_id": {
                                                        "type": "string",
                                                        "example": "123456789"
                                                    },
                                                    "city_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+995599123456"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "sunshine@garden.ge"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "city": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Tbilisi"
                                                            },
                                                            "region": {
                                                                "type": "string",
                                                                "example": "Tbilisi"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "images": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "title": {
                                                                    "type": "string",
                                                                    "example": "Main Entrance"
                                                                },
                                                                "image": {
                                                                    "type": "string",
                                                                    "example": "garden_images/abc123.jpg"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 50
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Gardens"
                ],
                "summary": "Create a new garden",
                "description": "Create a new garden with the provided information",
                "operationId": "createGarden",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "address",
                                    "tax_id",
                                    "city_id",
                                    "phone",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Garden name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "New Garden"
                                    },
                                    "address": {
                                        "description": "Garden address",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "456 Oak Avenue"
                                    },
                                    "tax_id": {
                                        "description": "Tax identification number",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "987654321"
                                    },
                                    "city_id": {
                                        "description": "ID of the associated city",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "phone": {
                                        "description": "Contact phone number",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "+995599654321"
                                    },
                                    "email": {
                                        "description": "Contact email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "newgarden@garden.ge"
                                    },
                                    "password": {
                                        "description": "Garden access password",
                                        "type": "string",
                                        "minLength": 6,
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Garden created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "garden": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "New Garden"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "456 Oak Avenue"
                                                },
                                                "tax_id": {
                                                    "type": "string",
                                                    "example": "987654321"
                                                },
                                                "city_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+995599654321"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "newgarden@garden.ge"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "New Garden"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "newgarden@garden.ge"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "garden"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Garden and user account created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "address": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "tax_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "city_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gardens/{id}": {
            "get": {
                "tags": [
                    "Gardens"
                ],
                "summary": "Get a specific garden",
                "description": "Retrieve detailed information about a specific garden",
                "operationId": "getGarden",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Garden ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Sunshine Garden"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "123 Main Street"
                                        },
                                        "tax_id": {
                                            "type": "string",
                                            "example": "123456789"
                                        },
                                        "city_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+995599123456"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "sunshine@garden.ge"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "city": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Tbilisi"
                                                },
                                                "region": {
                                                    "type": "string",
                                                    "example": "Tbilisi"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Garden not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Garden]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Gardens"
                ],
                "summary": "Update a garden",
                "description": "Update an existing garden with new information",
                "operationId": "updateGarden",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Garden ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Garden name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Garden"
                                    },
                                    "address": {
                                        "description": "Garden address",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "789 Pine Street"
                                    },
                                    "tax_id": {
                                        "description": "Tax identification number",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "111222333"
                                    },
                                    "city_id": {
                                        "description": "ID of the associated city",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "phone": {
                                        "description": "Contact phone number",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "+995599111222"
                                    },
                                    "email": {
                                        "description": "Contact email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "updated@garden.ge"
                                    },
                                    "password": {
                                        "description": "Garden access password",
                                        "type": "string",
                                        "minLength": 6,
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Garden updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Updated Garden"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "789 Pine Street"
                                        },
                                        "tax_id": {
                                            "type": "string",
                                            "example": "111222333"
                                        },
                                        "city_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+995599111222"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "updated@garden.ge"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Garden not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Garden]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "address": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "tax_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "city_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Gardens"
                ],
                "summary": "Delete a garden",
                "description": "Permanently delete a garden",
                "operationId": "deleteGarden",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Garden ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Garden deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Garden deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Garden not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Garden]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/gardens/bulk-delete": {
            "delete": {
                "tags": [
                    "Gardens"
                ],
                "summary": "Delete multiple gardens",
                "description": "Permanently delete multiple gardens by their IDs",
                "operationId": "bulkDeleteGardens",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ids"
                                ],
                                "properties": {
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Gardens deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Gardens deleted"
                                        },
                                        "deleted_count": {
                                            "type": "integer",
                                            "example": 3
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No valid IDs provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/garden-groups": {
            "get": {
                "tags": [
                    "Garden Groups"
                ],
                "summary": "Get all garden groups",
                "description": "Retrieve a paginated list of all garden groups with their associated garden information. Supports filtering by name and garden_id.",
                "operationId": "getGardenGroups",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by group name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "garden_id",
                        "in": "query",
                        "description": "Filter by garden ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (pagination)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Group A"
                                                    },
                                                    "garden_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "garden": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Sunshine Garden"
                                                            },
                                                            "address": {
                                                                "type": "string",
                                                                "example": "123 Main St"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 50
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Garden Groups"
                ],
                "summary": "Create a new garden group",
                "description": "Create a new garden group with the provided information",
                "operationId": "createGardenGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "garden_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the garden group",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Group B"
                                    },
                                    "garden_id": {
                                        "description": "ID of the associated garden",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Garden group created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Group B"
                                        },
                                        "garden_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "garden_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/garden-groups/{id}": {
            "get": {
                "tags": [
                    "Garden Groups"
                ],
                "summary": "Get a specific garden group",
                "description": "Retrieve detailed information about a specific garden group",
                "operationId": "getGardenGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Garden group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Group A"
                                        },
                                        "garden_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "garden": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Sunshine Garden"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Main St"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Garden group not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\GardenGroup]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Garden Groups"
                ],
                "summary": "Update a garden group",
                "description": "Update an existing garden group with new information",
                "operationId": "updateGardenGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Garden group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the garden group",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Group A"
                                    },
                                    "garden_id": {
                                        "description": "ID of the associated garden",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Garden group updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Updated Group A"
                                        },
                                        "garden_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Garden group not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\GardenGroup]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "garden_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Garden Groups"
                ],
                "summary": "Delete a garden group",
                "description": "Permanently delete a garden group",
                "operationId": "deleteGardenGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Garden group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Garden group deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Garden group not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\GardenGroup]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/garden-images": {
            "post": {
                "tags": [
                    "Garden Images"
                ],
                "summary": "Upload a new garden image",
                "description": "Upload a new image for a garden. Requires authentication.",
                "operationId": "createGardenImage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "garden_id",
                                    "image"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Main Entrance"
                                    },
                                    "garden_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "image": {
                                        "description": "Image file (jpg, png, etc.)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Garden image uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Main Entrance"
                                        },
                                        "garden_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "garden_images/abc123.jpg"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/garden-images/{id}": {
            "delete": {
                "tags": [
                    "Garden Images"
                ],
                "summary": "Delete a garden image",
                "description": "Deletes a garden image by ID. Requires authentication.",
                "operationId": "deleteGardenImage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the garden image to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Garden image deleted successfully"
                    },
                    "404": {
                        "description": "Garden image not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Garden image not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/parents": {
            "get": {
                "tags": [
                    "Parents"
                ],
                "summary": "Get all parents",
                "description": "Retrieve a list of all parents with their associated group and card information",
                "operationId": "getParents",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "first_name": {
                                                "type": "string",
                                                "example": "Nino"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "Davitashvili"
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "active",
                                                    "inactive",
                                                    "blocked"
                                                ],
                                                "example": "active"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "+995599123456"
                                            },
                                            "code": {
                                                "type": "string",
                                                "example": "PARENT001",
                                                "nullable": true
                                            },
                                            "group_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "card_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "group": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Group A"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "card": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "child_first_name": {
                                                        "type": "string",
                                                        "example": "Giorgi"
                                                    },
                                                    "child_last_name": {
                                                        "type": "string",
                                                        "example": "Davitashvili"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Parents"
                ],
                "summary": "Create a new parent",
                "description": "Create a new parent with the provided information",
                "operationId": "createParent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "status",
                                    "phone",
                                    "group_id",
                                    "card_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "Parent's first name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Nino"
                                    },
                                    "last_name": {
                                        "description": "Parent's last name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Davitashvili"
                                    },
                                    "status": {
                                        "description": "Parent status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "blocked"
                                        ],
                                        "example": "active"
                                    },
                                    "phone": {
                                        "description": "Contact phone number",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+995599123456"
                                    },
                                    "code": {
                                        "description": "Optional parent code",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "PARENT001",
                                        "nullable": true
                                    },
                                    "group_id": {
                                        "description": "ID of the associated garden group",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "card_id": {
                                        "description": "ID of the associated child card",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Parent created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "Nino"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Davitashvili"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "active"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+995599123456"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "PARENT001",
                                            "nullable": true
                                        },
                                        "group_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "card_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "first_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "last_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "group_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "card_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/parents/{id}": {
            "get": {
                "tags": [
                    "Parents"
                ],
                "summary": "Get a specific parent",
                "description": "Retrieve detailed information about a specific parent",
                "operationId": "getParent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parent ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "Nino"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Davitashvili"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "active",
                                                "inactive",
                                                "blocked"
                                            ],
                                            "example": "active"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+995599123456"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "PARENT001",
                                            "nullable": true
                                        },
                                        "group_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "card_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "group": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Group A"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "card": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "child_first_name": {
                                                    "type": "string",
                                                    "example": "Giorgi"
                                                },
                                                "child_last_name": {
                                                    "type": "string",
                                                    "example": "Davitashvili"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parent not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\ParentModel]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Parents"
                ],
                "summary": "Update a parent",
                "description": "Update an existing parent with new information",
                "operationId": "updateParent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parent ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "Parent's first name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Nino"
                                    },
                                    "last_name": {
                                        "description": "Parent's last name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Davitashvili"
                                    },
                                    "status": {
                                        "description": "Parent status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "blocked"
                                        ],
                                        "example": "inactive"
                                    },
                                    "phone": {
                                        "description": "Contact phone number",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+995599654321"
                                    },
                                    "code": {
                                        "description": "Optional parent code",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "UPDATED001",
                                        "nullable": true
                                    },
                                    "group_id": {
                                        "description": "ID of the associated garden group",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "card_id": {
                                        "description": "ID of the associated child card",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Parent updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "Updated Nino"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Updated Davitashvili"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "inactive"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+995599654321"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "UPDATED001",
                                            "nullable": true
                                        },
                                        "group_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "card_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parent not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\ParentModel]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "first_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "last_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "group_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "card_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Parents"
                ],
                "summary": "Delete a parent",
                "description": "Permanently delete a parent",
                "operationId": "deleteParent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parent ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parent deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Parent deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parent not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\ParentModel]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/people": {
            "get": {
                "tags": [
                    "People"
                ],
                "summary": "Get all people",
                "description": "Retrieve a list of all people with their associated person type and card information. Supports filtering by first_name, last_name, person_type_id, and card_id.",
                "operationId": "getPeople",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "Filter by first name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Filter by last name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Doe"
                        }
                    },
                    {
                        "name": "person_type_id",
                        "in": "query",
                        "description": "Filter by person type ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "card_id",
                        "in": "query",
                        "description": "Filter by card ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "first_name": {
                                                "type": "string",
                                                "example": "John"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "Doe"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "+995599123456"
                                            },
                                            "person_type_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "card_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "person_type": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Parent"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "card": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "child_first_name": {
                                                        "type": "string",
                                                        "example": "Giorgi"
                                                    },
                                                    "child_last_name": {
                                                        "type": "string",
                                                        "example": "Davitashvili"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "People"
                ],
                "summary": "Create a new person",
                "description": "Create a new person with the provided information",
                "operationId": "createPerson",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "phone",
                                    "person_type_id",
                                    "card_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "Person's first name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "Person's last name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "phone": {
                                        "description": "Contact phone number",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+995599123456"
                                    },
                                    "person_type_id": {
                                        "description": "ID of the associated person type",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "card_id": {
                                        "description": "ID of the associated card",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Person created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+995599123456"
                                        },
                                        "person_type_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "card_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "first_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "last_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "person_type_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "card_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/people/{id}": {
            "get": {
                "tags": [
                    "People"
                ],
                "summary": "Get a specific person",
                "description": "Retrieve detailed information about a specific person",
                "operationId": "getPerson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Person ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+995599123456"
                                        },
                                        "person_type_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "card_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "person_type": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Parent"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "card": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "child_first_name": {
                                                    "type": "string",
                                                    "example": "Giorgi"
                                                },
                                                "child_last_name": {
                                                    "type": "string",
                                                    "example": "Davitashvili"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\People]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "People"
                ],
                "summary": "Update a person",
                "description": "Update an existing person with new information",
                "operationId": "updatePerson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Person ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "Person's first name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated John"
                                    },
                                    "last_name": {
                                        "description": "Person's last name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Doe"
                                    },
                                    "phone": {
                                        "description": "Contact phone number",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+995599654321"
                                    },
                                    "person_type_id": {
                                        "description": "ID of the associated person type",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "card_id": {
                                        "description": "ID of the associated card",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Person updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "Updated John"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Updated Doe"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+995599654321"
                                        },
                                        "person_type_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "card_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\People]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "first_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "last_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "person_type_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "card_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "People"
                ],
                "summary": "Delete a person",
                "description": "Permanently delete a person",
                "operationId": "deletePerson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Person ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Person deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Person deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\People]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/person-types": {
            "get": {
                "tags": [
                    "Person Types"
                ],
                "summary": "Get all person types",
                "description": "Retrieve a list of all person types",
                "operationId": "getPersonTypes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Parent"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "summary": "Get all users",
                "operationId": "566aed8efb436ca506e0ef51a032ecd9",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Cards",
            "description": "API Endpoints for managing child cards"
        },
        {
            "name": "Devices",
            "description": "API Endpoints for managing devices"
        },
        {
            "name": "Gardens",
            "description": "API Endpoints for managing gardens"
        },
        {
            "name": "Garden Groups",
            "description": "API Endpoints for managing garden groups"
        },
        {
            "name": "Garden Images",
            "description": "API Endpoints for managing garden images"
        },
        {
            "name": "Parents",
            "description": "API Endpoints for managing parent models"
        },
        {
            "name": "People",
            "description": "API Endpoints for managing people"
        },
        {
            "name": "Person Types",
            "description": "API Endpoints for managing person types"
        },
        {
            "name": "Auth",
            "description": "Auth"
        }
    ],
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}